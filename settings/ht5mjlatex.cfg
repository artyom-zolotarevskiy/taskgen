\Preamble{xhtml,mathjax}
\Configure{VERSION}{}
\Configure{DOCTYPE}{\HCode{<!DOCTYPE html>\Hnewline}}
\Configure{HTML}{\HCode{<html>\Hnewline}}{\HCode{\Hnewline</html>}}
\Configure{@HEAD}{}
\Configure{@HEAD}{\HCode{<meta charset="UTF-8" />\Hnewline}}
\Configure{@HEAD}{\HCode{<meta name="generator" content="TeX4ht" />\Hnewline}}
\Configure{@HEAD}{\HCode{<link
         rel="stylesheet" type="text/css"
         href="\expandafter\csname aa:CssFile\endcsname" />\Hnewline}}
\Configure{@HEAD}{\HCode{<script type="text/javascript"\Hnewline
async="async" id="MathJax-script" src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml-full.js"\Hnewline
></script>\Hnewline}}
\Configure{@HEAD}{\HCode{<style type="text/css">\Hnewline
  .MathJax_MathML {text-indent: 0;}\Hnewline
</style>\Hnewline}}
\Configure{@HEAD}{\HCode{<script type='text/javascript'>\Hnewline
  window.mathjax_loaded = false;
  window.MathJax = {
    startup: {
      typeset: false,
      pageReady() {
        var typeset_blocks = document.getElementsByClassName('typeset');
        for (var i = 0; i < typeset_blocks.length; i++){
           MathJax.typeset([typeset_blocks[i]]);
           MathJax.startup.input[0].parseOptions.tags.counter = 0;
           MathJax.startup.input[0].parseOptions.tags.allCounter = 0;
           MathJax.startup.input[0].parseOptions.tags.allLabels = {};
        }
      },
      ready: function() {
        MathJax.startup.defaultReady();
        MathJax.startup.promise.then(function () {
          console.log('MathJax initial typesetting complete');
          window.mathjax_loaded = true;
        });
      }
    },
    tex: {
      tags: 'ams'
    }
  };\Hnewline
</script>\Hnewline}}
\Configure{BODY}
  {\HCode{<body>\Hnewline<div class="typeset"\detokenize{>}\Hnewline}}
  {\HCode{\Hnewline</div>\Hnewline</body>}}
\Configure{@BODY}{\IgnorePar\HCode{<p style="display:none;">}
\HCode{\detokenize{\(}}
\special{t4ht*<mathjaxcommands.tex}
\HCode{\detokenize{\)}}
\HCode{</p>}
\par
}
\begin{document}

\EndPreamble
